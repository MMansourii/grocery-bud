{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","edit","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","event","preventDefault","console","log","newItem","Date","getTime","toString","placeholder","value","onChange","e","target","length","filter","specified","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a194b5f2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\n\r\nconst List = ({items,removeItem,edit}) => {\r\n  return <div className='grocery-list' >\r\n    {items.map(item =>{\r\n      const {id , title} = item ;\r\n      return <article key={id} className='grocery-item' >\r\n        <p className='title'>{title}</p>\r\n        <div className='btn-container'>\r\n          <button \r\n          type='button' \r\n          className='edit-btn'\r\n          onClick={()=>edit(id)}>\r\n            <FaEdit/>\r\n          </button>\r\n          <button \r\n          type='button' \r\n          className='delete-btn' \r\n          onClick={()=>removeItem(id)}>\r\n            <FaTrash/>\r\n          </button>\r\n        </div>\r\n      </article>\r\n    })}\r\n  </div>\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({type,msg,removeAlert,list}) => {\r\n  useEffect(()=>{\r\n    const timeout = setTimeout(()=>{removeAlert()},3000);\r\n    return ()=>  clearTimeout(timeout);\r\n  },[list])\r\n  return <p className={`alert alert-${type}`} >{msg}</p>\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nconst getfromLocalStorage = ()=>{\r\n  let list = localStorage.getItem('list');\r\n  if(list){\r\n    return JSON.parse(localStorage.getItem('list'));\r\n  }else{\r\n    return [] ;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [name,setName] = useState('');\r\n  const [list,setList] = useState(getfromLocalStorage());\r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const [editID,setEditID] = useState(null);\r\n  const [alert,setAlert] = useState({show: false , msg : 'Hello World' , type : 'danger'});\r\n\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    console.log('Was submitted');\r\n    if(!name){\r\n      //display alert\r\n      showAlert(true,'Please enter Value','danger');\r\n\r\n    }else if(name &&isEditing){\r\n      // deal with edit\r\n      setList(list.map(item => {\r\n        if(item.id === editID){\r\n          return {...item , title:name}\r\n        }\r\n      return item ;\r\n      })\r\n      )\r\n      setName('');\r\n      setEditID(null);\r\n      setIsEditing(false);\r\n      showAlert(true,'Value Changed','success');\r\n    }else{\r\n        // show alert\r\n        showAlert(true,'Item added','success');\r\n        const newItem = {id : new Date().getTime().toString(), title:name};\r\n        setList([...list,newItem]);\r\n        setName(' ');\r\n    }\r\n  }\r\n  const showAlert = (show=false,msg,type) =>{\r\n    setAlert({show,msg,type});\r\n  }\r\n  const clearListHandler = ()=>{\r\n    showAlert(true,'List is empty','danger');\r\n    setList([]);\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    showAlert(true,'Item has been just removed','danger');\r\n    setList(list.filter((item) => item.id !== id));\r\n  }\r\n\r\n  const editItem = (id) =>{\r\n    setIsEditing(true);\r\n    const specified = list.find(item => item.id === id);\r\n    setEditID(id);\r\n    setName(specified.title);\r\n  }  \r\n  useEffect(()=>{\r\n    localStorage.setItem('list',JSON.stringify(list));\r\n  },[list]);\r\n  return <section className='section-center' > \r\n           <form className='grocery-form' onSubmit={handleSubmit} >\r\n                {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\r\n                <h3>Grocery Bud</h3>\r\n                <div className='form-control' >\r\n                  <input \r\n                  type='text' \r\n                  className='grocery' \r\n                  placeholder='e.g. egss' \r\n                  value={name} \r\n                  onChange={(e)=>setName(e.target.value)} />\r\n                  <button type='submit' className='submit-btn' >{isEditing ? 'Edit' : 'Submit'}</button>\r\n                </div>\r\n          </form>\r\n          {list.length > 0 &&        \r\n        <div className='grocery-container'>\r\n        <List \r\n        items={list} \r\n        removeItem={removeItem} \r\n        edit={editItem}/>\r\n        <button className='clear-btn' onClick={clearListHandler} >Clear Items</button>\r\n        </div> }\r\n\r\n   </section>\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}